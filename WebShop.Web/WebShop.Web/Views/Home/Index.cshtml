@using GridMvc
@using GridMvc.Html
@using WebShop.Web.Session
@model IQueryable<WebShop.Domain.Article>
@{
    ViewBag.Title = "Home Page";
}

@*@if (UserInfo.IsAdmin())*@
@if (true)
{
    <div class="row">
        <div class="col-xs-12">
            @Html.ActionLink("Ajouter un article", "Create", "Article", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}

<div class="table-responsive">
    @Html.Grid(Model).Columns(col =>
{
    col.Add(model => model.ART_Libelle)
        .Titled("Article")
        .Filterable(true)
        .Sortable(true);
    col.Add(model => model.ART_Prix)
        .Titled("Prix")
        .Filterable(true)
        .Sortable(true);
    col.Add(model => model.ART_Stock)
        .Titled("Stock")
        .Filterable(true)
        .Sortable(true);
    col.Add()
        .Sanitized(false)
        .Encoded(false)
        .RenderValueAs(model => Html.ActionLink("Détails", "Detail", "Articles", new { id = model.ART_Id }, new { @class = "btn btn-sm btn-primary" }))
        .SetWidth(100);
    //if (UserInfo.IsAdmin())
    if (true)
    {
        col.Add()
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(model => Html.ActionLink("Modifier", "Edit", "Articles", new { id = model.ART_Id }, new { @class = "btn btn-sm btn-primary" }))
            .SetWidth(100);
        col.Add()
            .Sanitized(false)
            .Encoded(false)
            .RenderValueAs(model => Html.ActionLink("Supprimer", "Delete", "Articles", new { id = model.ART_Id }, new { @class = "btn btn-sm btn-danger" }))
            .SetWidth(100);
    }
}).EmptyText("rien").Sortable(true).Filterable(true).WithPaging(10)
    
</div>